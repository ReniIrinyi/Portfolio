{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class ScrollService {\n  constructor() {\n    this.isStickySubject = new Subject();\n    this.isSticky$ = this.isStickySubject.asObservable();\n  }\n  // Set the sticky status\n  setIsSticky(isSticky) {\n    this.isStickySubject.next(isSticky);\n  }\n}\nScrollService.ɵfac = function ScrollService_Factory(t) {\n  return new (t || ScrollService)();\n};\nScrollService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ScrollService,\n  factory: ScrollService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["Subject","ScrollService","constructor","isStickySubject","isSticky$","asObservable","setIsSticky","isSticky","next","factory","ɵfac","providedIn"],"sources":["/Users/renatairinyi/Documents/PROGRAMOZÀS/GitHub/Portfolio/src/app/Service/ScrollService.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ScrollService {\n  private isStickySubject = new Subject<boolean>();\n  isSticky$ = this.isStickySubject.asObservable();\n\n  // Set the sticky status\n  setIsSticky(isSticky: boolean) {\n    this.isStickySubject.next(isSticky);\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIU,KAAAC,eAAe,GAAG,IAAIH,OAAO,EAAW;IAChD,KAAAI,SAAS,GAAG,IAAI,CAACD,eAAe,CAACE,YAAY,EAAE;;EAE/C;EACAC,WAAWA,CAACC,QAAiB;IAC3B,IAAI,CAACJ,eAAe,CAACK,IAAI,CAACD,QAAQ,CAAC;EACrC;;AAPWN,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAQ,OAAA,EAAbR,aAAa,CAAAS,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}