[
  {
    "id": 1,
    "date": "06. Jul. 2023",
    "name": "Using particles.js as a background with Angular 16",
    "urlDescription": "Particles-Generator",
    "url": "https://vincentgarreau.com/particles.js/",
    "url2Description": "Vincent Garreu particles libary",
    "url2": "https://github.com/VincentGarreau/particles.js/",
    "url3Description": "My personalized particles.js json file",
    "url3": "https://github.com/ReniIrinyi/Portfolio/blob/main/src/assets/particles.json",
    "snippet1": "../assets/img/blog/particlesHtml.webp",
    "snippet2": "../assets/img/blog/homeContainer.webp",
    "snippet3": "../assets/img/blog/methodLoadParticles.webp",
    "snippet4": "string",
    "snippet5": "string",
    "img": "../assets/img/blog/particles.webp",
    "img2": "string",
    "short": "I've always really liked dynamic backgrounds, and when I first came across the particles library, I knew I would use it when I had a portfolio. I did a lot of research on the internet on how to add the library to my project, but at first it seemed very complicated. I experimented a bit, and finally realised that it was easier than I thought - and like most blogs and videos describe. So I decided to take a few minutes and write it down to give an easy tutorial for those who are also big fans of similar effects.",
    "text": "Before you get started, you need to visit the website of Vincent Garreau, respectively the generator. Here you can personalise the animation you want and download it. The most important files to download are particles.js and particles.json. You have to copy them to the assets directory. The json-file contains your customized properties of the animation, and the javascript file is the code of the particle itself.  ",
    "text2": "To make it appear as a background, I created a div in app.home.html and added the id 'particles-js' and the classname 'body'. I wanted the animation to appear on the video, which I achieved by using the z-index and absolute positioning.",
    "text3": "In home.component.ts I finally wrote a method to load the particle.js file.",
    "conclusion": "Thats it."
  },
  {
    "id": 2,
    "date": "13. Jul. 2023",
    "name": "I completed the Helsinki University's MOOC Java I. Course: Part 1. - Installing and running TMCBeans on Monterey",
    "urlDescription": "Helsinki's MOOC Java I. Course",
    "url": "https://java-programming.mooc.fi/",
    "url2Description": "JDK 11 from Oracle",
    "url2": "https://www.oracle.com/ch-de/java/technologies/javase/jdk11-archive-downloads.html",
    "url3Description": "Netbeans",
    "url3": "https://www.mooc.fi/en/installation/netbeans/",
    "snippet1": "../assets/img/blog/tmcbeansconfig.png",
    "snippet2": "../assets/img/blog/terminal.png",
    "snippet3": "../assets/img/blog/tmcbeansconfigfile.png",
    "snippet4": "string",
    "snippet5": "string",
    "img": "../assets/img/blog/tmcbeans.png",
    "img2": "string",
    "short": "When I first considered learning a programming language, I initially looked into free online courses available on the internet because I wasn't sure if I would be genuinely receptive to it or if I could learn it. It was clear to me that I wouldn't immediately dive into a higher-cost expenditure before trying to see if programming was right for me, as I had absolutely no idea about it. I read a lot about which could be the most ideal first language, and opinions varied greatly. Ultimately, I chose Java, partly because I found a fantastic free course offered by the University of Helsinki. The course is relatively old, but I thought it would be perfect to learn the fundamentals of the language and get a sense of the whole programming field. You can find the link to the course at the end of the post.",
    "text": "So, I started the course, and I already faced the first problem. The University of Helsinki uses the TMCBeans IDE, and I couldn't get it to work on Monterey. This post was created to show you how to run TMCBeans on Monterey.",
    "text1": "First of all, you will need to install Java. Unfortunately, the link in the course description is not working, so simply download and install it directly from the official website. TMCBeans only runs with Java 11, so you need to install it. ",
    "text2": "The next step is to install TMCBeans. In the case of Mac, you may encounter an issue because the file is not trusted/verified. In such a situation, use the Finder to locate the TMCBeans file, and after right-click on it, choosing the 'open' option. This is where my problems started. TMCBeans didn't respond at all.. This is happened because TMCBeans, by default, does not know the location of the JDK on the hard drive to load the modules.",
    "text3": " To solve the problem, you first need to find the exact location of the JDK on the hard drive. Open the terminal and paste the command you see in the image. This will give you the precise location of the JDK. In the next step, simply open the 'tmcbeans.conf' file inside the TMCBeans directory with an editor (I used VSCode) and paste the JDK location into the 'jdkhome='file/path' line. Don't forget to remove the hashtag at the beginning of the line and save the file. ",
    "conclusion": "TMCBeans will now open without any issues."
  },
  {
    "id": 3,
    "date": "20. Jul. 2023",
    "name": "How to use FontAwesome with Angular 16",
    "urlDescription": "Font Awesome Docs",
    "url": "https://fontawesome.com/versions",
    "url2Description": "Using Font Awesome with Angular",
    "url2": "https://fontawesome.com/docs/web/use-with/angular",
    "url3Description": "Angular-Fontawesome description on GitHub",
    "url3": "https://github.com/FortAwesome/angular-fontawesome",
    "snippet1": "../assets/img/blog/fontawesomeInstall.webp",
    "snippet2": "../assets/img/blog/fontawesomeInstall3.webp",
    "snippet3": "../assets/img/blog/fontawesomeAppmodule.webp",
    "snippet4": "../assets/img/blog/fontawesomeComponent.webp",
    "snippet5": "../assets/img/blog/fontawesometemplate.webp",
    "img": "../assets/img/blog/fontAwesome.webp",
    "img2": "../assets/img/blog/fontawesomeInstall.webp",
    "short": "FontAwesome is the most popular icon set and toolkit. It has both paid & free versions. This guide shows you how to use the Free version of Angular FontAwesome.",
    "text": "You need first install the FontAwesome package. But before installing you need to know which version to install. Not all versions are compatible with the various Angular versions. The following table should give you an idea. You can install the latest version or you can install a particular version as shown below.",
    "text1": "Since I use Mac, also need to put 'sudo' before the command.",
    "text2": "Next step is to add FontAwesomeModule to imports in src/app/app.module.ts.",
    "text3": "You need to tie the icon to the property in your component.",
    "conclusion": "Now you can use the icon in the template."
  },
  {
    "id": 4,
    "date": "27. Jul. 2023",
    "name": "How to use ngx-charts in Angular 16 Application",
    "urlDescription": "NGX-Charts Demo",
    "url": "https://swimlane.github.io/ngx-charts/#/ngx-charts/bar-horizontal",
    "url2Description": "My CV with Ngx-Charts",
    "url2": "#",
    "url3Description": "Ngx-Charts Docs",
    "url3": "https://swimlane.gitbook.io/ngx-charts/",
    "snippet1": "../assets/img/blog/installCharts.webp",
    "snippet2": "../assets/img/blog/importChartModules.webp",
    "snippet3": "../assets/img/blog/installDependenciesforCharts.webp",
    "snippet4": "../assets/img/blog/componentChart.webp",
    "snippet5": "../assets/img/blog/templateChart.webp",
    "img": "../assets/img/blog/fontAwesome.webp",
    "short": "FontAwesome is the most popular icon set and toolkit. It has both paid & free versions. This guide shows you how to use the Free version of Angular FontAwesome.",
    "text": "In the context of a devChallenges-challenge, I decided this would be a great opportunity to finally build my CV. There was a simple chartbar designed by the devChallenges that I could have easily implemented with CSS, but that's not my style :). I decided to create my first chartbar by myself in Angular. At first I wasn't sure how to start, and I did a lot of searching to find the best library for this purpose. In the end, I decided to go with the ngx library. Since I had a lot of trouble putting everything together and found few resources on the web, I decided to share with you how I managed to apply the ngx charts library in my CV project.",
    "text1": "The first step is to install the library and import it into the app.module file.",
    "text2": "To avoid making the same mistake as I did, after installing the library, we need to install some dependencies ('d3-shape', 'd3-scale', 'd3-selection') that are required for the ngx-charts library. After installing these modules, just crashed my whole application. To be honest, I didn't really understand why. I simply cleared out the 'node_modules' folder with the 'sudo rm -rf node_modules' command, reinstalled all the dependencies, and everything just worked.",
    "text3": "The ngx-charts provides different components for different charts... I think the NGX-Libary demo is very good, you can try everything here. You can find it at the link below, I played a lot here. Based on that I ended up setting up my chart the way I like it. You have to set the configuration in the component.ts-file of the component you want. ",
    "conclusion": "Finally all you have to do is add it to the template."
  }
]
