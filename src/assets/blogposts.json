[
  {
    "id": 1,
    "date": "16. Jul. 2023",
    "name": "Using particles.js as a background with Angular 16",
    "urlDescription": "Particles-Generator",
    "url": "https://vincentgarreau.com/particles.js/",
    "url2Description": "Vincent Garreu particles libary",
    "url2": "https://github.com/VincentGarreau/particles.js/",
    "url3Description": "My personalized particles.js json file",
    "url3": "https://github.com/ReniIrinyi/Portfolio/blob/main/src/assets/particles.json",
    "snippet1": "../assets/img/blog/particlesHtml.webp",
    "snippet2": "../assets/img/blog/homeContainer.webp",
    "snippet3": "../assets/img/blog/methodLoadParticles.webp",
    "snippet4": "string",
    "snippet5": "string",
    "img": "../assets/img/blog/particles.webp",
    "img2": "string",
    "short": "I've always really liked dynamic backgrounds, and when I first came across the particles library, I knew I would use it when I had a portfolio. I did a lot of research on the internet on how to add the library to my project, but at first it seemed very complicated. I experimented a bit, and finally realised that it was easier than I thought - and like most blogs and videos describe. So I decided to take a few minutes and write it down to give an easy tutorial for those who are also big fans of similar effects.",
    "text": "Before you get started, you need to visit the website of Vincent Garreau, respectively the generator. Here you can personalise the animation you want and download it. The most important files to download are particles.js and particles.json. You have to copy them to the assets directory. The json-file contains your customized properties of the animation, and the javascript file is the code of the particle itself.  ",
    "text2": "To make it appear as a background, I created a div in app.home.html and added the id 'particles-js' and the classname 'body'. I wanted the animation to appear on the video, which I achieved by using the z-index and absolute positioning.",
    "text3": "In home.component.ts I finally wrote a method to load the particle.js file.",
    "conclusion": "Thats it."
  },
  {
    "id": 2,
    "date": "01. Aug. 2023",
    "name": "I completed the Helsinki University's MOOC Java I. Course: Part 1. - Installing and running TMCBeans on Monterey",
    "urlDescription": "Helsinki's MOOC Java I. Course",
    "url": "https://java-programming.mooc.fi/",
    "url2Description": "JDK 11 from Oracle",
    "url2": "https://www.oracle.com/ch-de/java/technologies/javase/jdk11-archive-downloads.html",
    "url3Description": "Netbeans",
    "url3": "https://www.mooc.fi/en/installation/netbeans/",
    "snippet1": "../assets/img/blog/tmcbeansconfig.png",
    "snippet2": "../assets/img/blog/terminal.png",
    "snippet3": "../assets/img/blog/tmcbeansconfigfile.png",
    "snippet4": "string",
    "snippet5": "string",
    "img": "../assets/img/blog/tmcbeans.png",
    "img2": "string",
    "short": "When I first considered learning a programming language, I initially looked into free online courses available on the internet because I wasn't sure if I would be genuinely receptive to it or if I could learn it. It was clear to me that I wouldn't immediately dive into a higher-cost expenditure before trying to see if programming was right for me, as I had absolutely no idea about it. I read a lot about which could be the most ideal first language, and opinions varied greatly. Ultimately, I chose Java, partly because I found a fantastic free course offered by the University of Helsinki. The course is relatively old, but I thought it would be perfect to learn the fundamentals of the language and get a sense of the whole programming field. You can find the link to the course at the end of the post.",
    "text": "So, I started the course, and I already faced the first problem. The University of Helsinki uses the TMCBeans IDE, and I couldn't get it to work on Monterey. This post was created to show you how to run TMCBeans on Monterey.",
    "text2": "First of all, you will need to install Java. Unfortunately, the link in the course description is not working, so simply download and install it directly from the official website. TMCBeans only runs with Java 11, so you need to install it. The next step is to install TMCBeans. In the case of Mac, you may encounter an issue because the file is not trusted/verified. In such a situation, use the Finder to locate the TMCBeans file, and after right-click on it, choosing the 'open' option. This is where my problems started. TMCBeans didn't respond at all, and at first, I didn't understand why.",
    "text3": "Later, I realized that this happened because TMCBeans, by default, does not know the location of the JDK on the hard drive to load the modules. To solve the problem, you first need to find the exact location of the JDK on the hard drive. Open the terminal and paste the command you see in the image. This will give you the precise location of the JDK. In the next step, simply open the 'tmcbeans.conf' file inside the TMCBeans directory with an editor (I used VSCode) and paste the JDK location into the 'jdkhome='file/path' line. Don't forget to remove the hashtag at the beginning of the line and save the file. ",
    "conclusion": "TMCBeans will now open without any issues."
  }
]
